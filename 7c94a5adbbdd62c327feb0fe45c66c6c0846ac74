{
  "comments": [
    {
      "key": {
        "uuid": "5a72e520_dc1f2308",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2016-02-26T10:15:34Z",
      "side": 1,
      "message": "If this is the structure returned by rest, this should be moved to the service.\n\nAlso you have to provide type information for summary data",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_bcb0a7f5",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006436
      },
      "writtenOn": "2016-02-26T11:32:21Z",
      "side": 1,
      "message": "here , we are not sure about structure for every sub object of response object , because some of them have this kind structure . like example -\u003e\n\n{\n   \"name\":\"system\",\n   \"usage\":{\n\n      \"used\":134750208,\n      \"total\":3207401472\n\n    },\n   \"storageprofileusage\":{\n\n       \"general\":{\n        \"used\":131592,\n        \"total\":3132228\n       }\n\n    },\n    \"objectcnt\":0,\n    \"storagecount\":{\n\n       \"down\":0,\n       \"total\":4\n\n    },\n    \"slucount\":{\n\n           \"total\":3\n\n     },\n    \"nodescount\":{\n\n        \"error\":0,\n        \"total\":4,\n        \"unaccepted\":0\n\n    }\n}\n\nin above one , we can see we have This kind of structure for only  usage and storageprofileusage\u0027s subObject.",
      "parentUuid": "5a72e520_dc1f2308",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_1cfc5b3e",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2016-02-26T11:53:18Z",
      "side": 1,
      "message": "it is possible to express this type as follows.\n\n export interface SystemSummary {\n     name: string;\n     usage: { used: number, total: number};\n     storageprofileusage: { general: { used: number, total: number} }\n     ...   \n }",
      "parentUuid": "5a72e520_bcb0a7f5",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_3ca75751",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006436
      },
      "writtenOn": "2016-02-26T12:06:41Z",
      "side": 1,
      "message": "ya . it\u0027s possible . \n\nBut what my thought is ,later this Api will have to many info . how many we can do like this way . and also later if any thing got change in response data . so whole ui stuff will break in service . and won\u0027t get data in controller.\n\nThis structure will be useful when we have some generic data like suppose we have array of object . and each object have \"used\" and \"total\" properties . than only structure type checking will be useful.\n\ni don\u0027t think so , we should do like this way",
      "parentUuid": "5a72e520_1cfc5b3e",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_6763f8b1",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2016-02-26T13:15:37Z",
      "side": 1,
      "message": "API might have 100 properties, but we care about only the 10 properties which we use.\n\nThe type information doesn\u0027t play any role at the runtime and its discarded once the compilation is over.\n\nLets say declare 3 properties and API response has 10 properties(7 extra), its not going to break in the run time.\n\nwhat i am saying, whatever data we use in the controller, we need to define the type for them.\n\nLet me explain how this type information is useful. Take an example of Node resource, it has properties like hostname, management_ip4, extra. Now consider the backend API renamed management_ip4 to mgmt_ip4. How do we know what are controllers are using it. If we would defined the Node type and used everywhere, the moment you modify the type, compiler will throw an error where ever that property is used.\n\nSo the whole point having type information is to catch most of the error at compile time rather than at run time.\n\nIf you are still not clear, we can talk about it in person.",
      "parentUuid": "5a72e520_3ca75751",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_bc442275",
        "filename": "app/components/dashboard/dashboard-controller.ts",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006436
      },
      "writtenOn": "2016-02-29T06:09:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a72e520_6763f8b1",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 7,
        "endChar": 2
      },
      "revId": "7c94a5adbbdd62c327feb0fe45c66c6c0846ac74",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}